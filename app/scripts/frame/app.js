// Generated by IcedCoffeeScript 108.0.11

/*
* File: app
* User: Dow
* Date: 2014/10/24
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
define(['angular', './routes', 'socketio', 'ngRoute', 'angularLocalStorage', 'angular-moment', 'angularSocketio', 'angular-translate', 'angular-translate-loader-static-files', 'src'], function(angular, routes, io) {
  var app, exports;
  app = angular.module('app', ['ngRoute', 'angularLocalStorage', 'angularMoment', 'btford.socket-io', 'pascalprecht.translate', 'clc.frame']);
  app.config([
    '$routeProvider', '$locationProvider', '$translateProvider', function($routeProvider, $locationProvider, $translateProvider) {
      var router;
      $locationProvider.html5Mode({
        enabled: false,
        requireBase: false
      }).hashPrefix('');
      $translateProvider.useSanitizeValueStrategy('escaped');
      $translateProvider.useStaticFilesLoader({
        prefix: '/frame/res/languages/locale-',
        suffix: '.json'
      }, router = new routes.Router($routeProvider));
      return router.start();
    }
  ]);
  app.factory('socket', [
    '$location', 'socketFactory', function($location, socketFactory) {
      var ioUrl, mysocket, server, _ref;
      ioUrl = "" + $location.$$protocol + "://" + $location.$$host + ":" + ((_ref = window.setting.ioPort) != null ? _ref : $location.port());
      console.log("" + (new Date().toISOString()) + " connecting socket.io to " + ioUrl);
      server = io.connect(ioUrl);
      mysocket = socketFactory({
        ioSocket: server
      });
      mysocket.forward('error');
      return mysocket;
    }
  ]);
  app.run([
    '$rootScope', '$location', function($rootScope, $location) {
      return $rootScope.$on('$routeChangeStart', function(event, next, current) {
        var path;
        $rootScope.path = path = $location.url();
        if (!$rootScope.user) {
          if (path !== '/register' && path.indexOf('/login') < 0) {
            $rootScope.lastPath = path;
            return $location.path('/login').replace();
          }
        }
      });
    }
  ]);
  return exports = {
    app: app
  };
});
